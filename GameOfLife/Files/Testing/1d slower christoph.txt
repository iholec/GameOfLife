					//for (int gen = 0; gen < generations; ++gen) //todo handle edge cases alone
					//{
					//	bool ** temp_board = buffered_two_dim_board[mapSwitch];
					//	
					//	for (int i = 0; i < height; ++i)
					//	{
					//		const int i_minus = i - 1 >= 0 ? i - 1 : height - 1;
					//		const int i_plus = i + 1 < height ? i + 1 : 0;

					//		bool * prev_rows_minus = temp_board[i_minus];
					//		bool * prev_rows = temp_board[i];
					//		bool * prev_rows_plus = temp_board[i_plus];

					//		for (int j = 0; j < width; ++j)
					//		{
					//			int neighbors = 0;

					//			const int j_minus = j - 1 >= 0 ? j - 1 : width - 1;
					//			const int j_plus = j + 1 < width ? j + 1 : 0;

					//			neighbors += prev_rows_minus[j];
					//			neighbors += prev_rows_plus[j];
					//			neighbors += prev_rows[j_minus];
					//			neighbors += prev_rows[j_plus];
					//			neighbors += prev_rows_minus[j_minus];
					//			neighbors += prev_rows_plus[j_plus];
					//			neighbors += prev_rows_minus[j_plus];
					//			neighbors += prev_rows_plus[j_minus];

					//			buffered_two_dim_board[!mapSwitch][i][j] = lookup[temp_board[i][j]][neighbors];
					//		}
					//	}
					//	mapSwitch = !mapSwitch;
					//}
					
					
					//for (int gen = 0; gen < generations; ++gen) //todo handle edge cases alone
					//{
					//	bool * temp_board = bufferdBoard[mapSwitch];

					//	for (int i = 0; i < height; ++i)
					//	{
					//		int line1 = ((i - 1) < 0) ? height - 1 : (i - 1);
					//		int line3 = ((i + 1) >= height) ? 0 : (i + 1);
					//		
					//		for (int j = 0; j < width; ++j)
					//		{
					//			int neighbors = 0;

					//			int row1 = ((j - 1) < 0) ? width - 1 : (j - 1);
					//			int row3 = ((j + 1) >= width) ? 0 : (j + 1);

					//			neighbors += temp_board[XY_TO_INDEX(row1, line1)];
					//			neighbors += temp_board[XY_TO_INDEX(j, line1)];
					//			neighbors += temp_board[XY_TO_INDEX(row3, line1)];
					//			neighbors += temp_board[XY_TO_INDEX(row1, i)];
					//			neighbors += temp_board[XY_TO_INDEX(row3, i)];
					//			neighbors += temp_board[XY_TO_INDEX(row1, line3)];
					//			neighbors += temp_board[XY_TO_INDEX(j, line3)];
					//			neighbors += temp_board[XY_TO_INDEX(row3, line3)];
					//			
					//			bufferdBoard[!mapSwitch][XY_TO_INDEX(j,i)] = lookup[temp_board[XY_TO_INDEX(j, i)]][neighbors];
					//		}
					//	}
					//	mapSwitch = !mapSwitch;
					//}